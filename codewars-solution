
// week of May 11
//Find odd integer

function findOdd(A) { 
  let countNum = 0;
  for(var i = 0; i < A.length; i++) {
    for(var b = 0; b < A.length; b++) {
          if(A[i] == A[b]) {
            countNum++;
          }
    }
    if (countNum % 2 !== 0) {
        return A[i];
    }
  }
  countNum = 0;
}

findOdd([8,18,-7,-17,12]);


// Given a string, you have to return a string in which each character (case-sensitive) is repeated once.

function doubleChar(str) {
  let charArray = [];
  for(let i = 0; i <= str.length-1; i++){
  charArray.push(str[i]);
  charArray.push(str[i]);
  }
  // .join() joins elements in array and returns string
  return charArray.join('');
}

// Return a negative number but check to see if the number is negative first

function makeNegative(num) {

  if(num > 0) { 
    return -num
  }
  
  if(num <= 0) {
    return num;
  }
}

// Check to make sure that coupons are not expired and have the correct code so that customers cannot attempt to play the system

function checkCoupon(enteredCode, correctCode, currentDate, expirationDate){

  if(enteredCode === correctCode && Date.parse(currentDate) <= Date.parse(expirationDate)) {
    return true
    } else { 
    return false 
    }

}

// Return the vowels in a given string

function getCount(str) {
let vowelsCount = 0;
let vowels = ['a', 'e', 'i', 'o', 'u']; 
  for(let i = 0; i < str.length; i++) {
    vowels.forEach((vowelStrings) => {
      if(str[i] === vowelStrings) {
        vowelsCount++; 
      }
    })
  }
  return vowelsCount;
}

// Return a sorted array with words starting from shortest to longest
// use .sort()

function sortByLength (array) {
  return array.sort((nonSortedArray, sortedArray) =>
  nonSortedArray.length - sortedArray.length);
};

// week of May 18
// Your task is to sort ascending odd numbers but even numbers must be on their places.
function sortArray(array) {
const oddNums = [];
const positiveNums = [];

for (let i = 0; i < array.length; i += 1) {
  if (array[i]%2 === 0) {
    positiveNums.push(array[i]);
  } else {
    oddNums.push(array[i]);
  }
}
const arr = [];

  oddNums.sort((a, b) => a - b);
  for (let i = 0; i < array.length; i += 1) {
    if (array[i]%2 === 0) {
      arr.push(positiveNums.shift());
    } else {
      arr.push(oddNums.shift());
    }
  }
  return arr;
}


// Given an array of numbers (a list in groovy), determine whether the sum of all of the numbers is odd or even.
//Give your answer in string format as 'odd' or 'even'. If the input array is empty consider it as: [0] (array with a zero).
const oddOrEven = (arr) => {
  if(arr.length === 0) {
    arr = [0]
  }
  
  const result = arr.reduce((accumulator, currentValue) => accumulator+currentValue);
   return result % 2 === 0 ? 'even' : 'odd'
}

//You are given an array strarr of strings and an integer k. Your task is to return the first longest string consisting of k consecutive strings taken in the array.

function longestConsec(strarr, k) {
let longestString = "";
    for(var i=0;k>0 && i <= strarr.length-k; i++){
      var tempArray = strarr.slice(i,i+k);
      var randomString = tempArray.join("");
      if(randomString.length > longestString.length){
        longestString = randomString;
      }
    }
    return longestString;
}


// Welcome. In this kata, you are asked to square every digit of a number.

function squareDigits(num){
let originalNum = String(num);
let squaredNum ='';
  
  for(i=0; i <= originalNum.length-1; i++){
    squaredNum += originalNum[i]*originalNum[i];
  }
  return Number(squaredNum);
}

// Return single number that isn't unique in an array

function stray(numbers) {
 return numbers.reduce((x, y) => x ^ y);
}

//week of May 25th
//Find even and odd integers
const oddOrEven = (arr) => {
  if(arr.length === 0) {
    arr = [0]
  }
  
  const result = arr.reduce((accumulator, currentValue) => accumulator+currentValue);
   return result % 2 === 0 ? 'even' : 'odd'
}

//Filter list
function filter_list(l) {
  let result = [];
  // Return a new array with the strings filtered out
  l.forEach(item => {
    typeof item === 'number' ? result.push(item) : console.log('nah')
  })
  
  return result
}

//Find the capitals in a word
const capitals = (word) => {
  result = [];
  word.split('').forEach((w, k) => {
  if(w === w.toUpperCase()) {
    result.push(k);
  } 
  })
  return result;
}

//Find the shortest word
const findShort = (s) => {
  const reducer = (accumulator, currentValue) => accumulator <= currentValue ? accumulator : currentValue;
  const array = s.split(' ').map(word => word.length); 
  return array.reduce(reducer);
}

//Count the characters in your string
function count (string) {  
  let result = {}
  for(let i = 0; i < string.length; i++) {
    if(string.includes(string[i])) {
      result[string[i]] = 0;
    }
  }
  
  for(let j = 0; j < string.length; j++) {
    if(string.includes(string[j])) {
      result[string[j]] =  result[string[j]] + 1;
    }
  }
  return result;
}

